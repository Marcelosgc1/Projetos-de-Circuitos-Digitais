// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "05/08/2024 20:27:23"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module _60_seconds_timer (
	clk,
	reset,
	seconds_counter);
input 	clk;
input 	reset;
output 	[5:0] seconds_counter;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Add0~25 ;
wire \clk~combout ;
wire \reset~combout ;
wire \Add1~125_combout ;
wire \Add1~110_combout ;
wire \Add1~112 ;
wire \Add1~112COUT1_133 ;
wire \Add1~105_combout ;
wire \Add1~107 ;
wire \Add1~107COUT1_134 ;
wire \Add1~100_combout ;
wire \Equal0~6 ;
wire \Add1~127 ;
wire \Add1~127COUT1_131 ;
wire \Add1~120_combout ;
wire \Add1~102 ;
wire \Add1~102COUT1_135 ;
wire \Add1~95_combout ;
wire \Add1~90_combout ;
wire \Add1~92 ;
wire \Add1~92COUT1_137 ;
wire \Add1~85_combout ;
wire \Equal0~5 ;
wire \Add1~122 ;
wire \Add1~122COUT1_132 ;
wire \Add1~115_combout ;
wire \Add1~117 ;
wire \Add1~97 ;
wire \Add1~97COUT1_136 ;
wire \Add1~80_combout ;
wire \Add1~82 ;
wire \Add1~60_combout ;
wire \Add1~87 ;
wire \Add1~87COUT1_138 ;
wire \Add1~75_combout ;
wire \Add1~77 ;
wire \Add1~77COUT1_139 ;
wire \Add1~70_combout ;
wire \Add1~72 ;
wire \Add1~72COUT1_140 ;
wire \Add1~65_combout ;
wire \Add1~67 ;
wire \Add1~62 ;
wire \Add1~62COUT1_141 ;
wire \Add1~50_combout ;
wire \Add1~52 ;
wire \Add1~52COUT1_142 ;
wire \Add1~45_combout ;
wire \Add1~47 ;
wire \Add1~47COUT1_143 ;
wire \Add1~57 ;
wire \Add1~57COUT1_144 ;
wire \Add1~40_combout ;
wire \Add1~55_combout ;
wire \Equal0~3 ;
wire \Equal0~4 ;
wire \Add1~42 ;
wire \Add1~35_combout ;
wire \Add1~37 ;
wire \Add1~37COUT1_145 ;
wire \Add1~30_combout ;
wire \Add1~32 ;
wire \Add1~32COUT1_146 ;
wire \Add1~25_combout ;
wire \Add1~27 ;
wire \Add1~27COUT1_147 ;
wire \Add1~20_combout ;
wire \Add1~22 ;
wire \Add1~22COUT1_148 ;
wire \Add1~15_combout ;
wire \Add1~17 ;
wire \Add1~10_combout ;
wire \Add1~12 ;
wire \Add1~12COUT1_149 ;
wire \Add1~7 ;
wire \Add1~7COUT1_150 ;
wire \Add1~0_combout ;
wire \Add1~5_combout ;
wire \Equal0~0 ;
wire \Equal0~1 ;
wire \Equal0~2_combout ;
wire \Equal0~7 ;
wire \Equal0~8_combout ;
wire \seconds_counter[0]~reg0_regout ;
wire \Add0~27_cout0 ;
wire \Add0~27COUT1_31 ;
wire \Add0~0_combout ;
wire \seconds_counter[1]~reg0_regout ;
wire \Add0~2 ;
wire \Add0~2COUT1_32 ;
wire \Add0~7 ;
wire \Add0~7COUT1_33 ;
wire \Add0~10_combout ;
wire \seconds_counter[3]~reg0_regout ;
wire \Add0~12 ;
wire \Add0~15_combout ;
wire \seconds_counter[4]~reg0_regout ;
wire \Add0~17 ;
wire \Add0~17COUT1_34 ;
wire \Add0~20_combout ;
wire \seconds_counter[5]~reg0_regout ;
wire \seconds_counter~0_combout ;
wire \Add0~5_combout ;
wire \seconds_counter[2]~reg0_regout ;
wire [25:0] clk_counter;


// Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \reset~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\reset~combout ),
	.padio(reset));
// synopsys translate_off
defparam \reset~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X4_Y3_N2
maxii_lcell \Add1~125 (
// Equation(s):
// \Add1~125_combout  = ((!clk_counter[0]))
// \Add1~127  = CARRY(((clk_counter[0])))
// \Add1~127COUT1_131  = CARRY(((clk_counter[0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~125_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~127 ),
	.cout1(\Add1~127COUT1_131 ));
// synopsys translate_off
defparam \Add1~125 .lut_mask = "33cc";
defparam \Add1~125 .operation_mode = "arithmetic";
defparam \Add1~125 .output_mode = "comb_only";
defparam \Add1~125 .register_cascade_mode = "off";
defparam \Add1~125 .sum_lutc_input = "datac";
defparam \Add1~125 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N9
maxii_lcell \clk_counter[0] (
// Equation(s):
// clk_counter[0] = DFFEAS((((!\Equal0~8_combout  & \Add1~125_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Equal0~8_combout ),
	.datad(\Add1~125_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[0] .lut_mask = "0f00";
defparam \clk_counter[0] .operation_mode = "normal";
defparam \clk_counter[0] .output_mode = "reg_only";
defparam \clk_counter[0] .register_cascade_mode = "off";
defparam \clk_counter[0] .sum_lutc_input = "datac";
defparam \clk_counter[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N5
maxii_lcell \Add1~110 (
// Equation(s):
// \Add1~110_combout  = (clk_counter[3] $ ((\Add1~117 )))
// \Add1~112  = CARRY(((!\Add1~117 ) # (!clk_counter[3])))
// \Add1~112COUT1_133  = CARRY(((!\Add1~117 ) # (!clk_counter[3])))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~117 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~110_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~112 ),
	.cout1(\Add1~112COUT1_133 ));
// synopsys translate_off
defparam \Add1~110 .cin_used = "true";
defparam \Add1~110 .lut_mask = "3c3f";
defparam \Add1~110 .operation_mode = "arithmetic";
defparam \Add1~110 .output_mode = "comb_only";
defparam \Add1~110 .register_cascade_mode = "off";
defparam \Add1~110 .sum_lutc_input = "cin";
defparam \Add1~110 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N7
maxii_lcell \clk_counter[3] (
// Equation(s):
// clk_counter[3] = DFFEAS((((\Add1~110_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add1~110_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[3] .lut_mask = "ff00";
defparam \clk_counter[3] .operation_mode = "normal";
defparam \clk_counter[3] .output_mode = "reg_only";
defparam \clk_counter[3] .register_cascade_mode = "off";
defparam \clk_counter[3] .sum_lutc_input = "datac";
defparam \clk_counter[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N6
maxii_lcell \Add1~105 (
// Equation(s):
// \Add1~105_combout  = (clk_counter[4] $ ((!(!\Add1~117  & \Add1~112 ) # (\Add1~117  & \Add1~112COUT1_133 ))))
// \Add1~107  = CARRY(((clk_counter[4] & !\Add1~112 )))
// \Add1~107COUT1_134  = CARRY(((clk_counter[4] & !\Add1~112COUT1_133 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[4]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~117 ),
	.cin0(\Add1~112 ),
	.cin1(\Add1~112COUT1_133 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~105_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~107 ),
	.cout1(\Add1~107COUT1_134 ));
// synopsys translate_off
defparam \Add1~105 .cin0_used = "true";
defparam \Add1~105 .cin1_used = "true";
defparam \Add1~105 .cin_used = "true";
defparam \Add1~105 .lut_mask = "c30c";
defparam \Add1~105 .operation_mode = "arithmetic";
defparam \Add1~105 .output_mode = "comb_only";
defparam \Add1~105 .register_cascade_mode = "off";
defparam \Add1~105 .sum_lutc_input = "cin";
defparam \Add1~105 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N1
maxii_lcell \clk_counter[4] (
// Equation(s):
// clk_counter[4] = DFFEAS(GND, GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , \Add1~105_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add1~105_combout ),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[4] .lut_mask = "0000";
defparam \clk_counter[4] .operation_mode = "normal";
defparam \clk_counter[4] .output_mode = "reg_only";
defparam \clk_counter[4] .register_cascade_mode = "off";
defparam \clk_counter[4] .sum_lutc_input = "datac";
defparam \clk_counter[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N0
maxii_lcell \clk_counter[5] (
// Equation(s):
// \Equal0~6  = (!clk_counter[2] & (!clk_counter[3] & (!clk_counter[5] & !clk_counter[4])))
// clk_counter[5] = DFFEAS(\Equal0~6 , GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , \Add1~100_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(clk_counter[2]),
	.datab(clk_counter[3]),
	.datac(\Add1~100_combout ),
	.datad(clk_counter[4]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~6 ),
	.regout(clk_counter[5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[5] .lut_mask = "0001";
defparam \clk_counter[5] .operation_mode = "normal";
defparam \clk_counter[5] .output_mode = "reg_and_comb";
defparam \clk_counter[5] .register_cascade_mode = "off";
defparam \clk_counter[5] .sum_lutc_input = "qfbk";
defparam \clk_counter[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N7
maxii_lcell \Add1~100 (
// Equation(s):
// \Add1~100_combout  = clk_counter[5] $ (((((!\Add1~117  & \Add1~107 ) # (\Add1~117  & \Add1~107COUT1_134 )))))
// \Add1~102  = CARRY(((!\Add1~107 )) # (!clk_counter[5]))
// \Add1~102COUT1_135  = CARRY(((!\Add1~107COUT1_134 )) # (!clk_counter[5]))

	.clk(gnd),
	.dataa(clk_counter[5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~117 ),
	.cin0(\Add1~107 ),
	.cin1(\Add1~107COUT1_134 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~100_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~102 ),
	.cout1(\Add1~102COUT1_135 ));
// synopsys translate_off
defparam \Add1~100 .cin0_used = "true";
defparam \Add1~100 .cin1_used = "true";
defparam \Add1~100 .cin_used = "true";
defparam \Add1~100 .lut_mask = "5a5f";
defparam \Add1~100 .operation_mode = "arithmetic";
defparam \Add1~100 .output_mode = "comb_only";
defparam \Add1~100 .register_cascade_mode = "off";
defparam \Add1~100 .sum_lutc_input = "cin";
defparam \Add1~100 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N3
maxii_lcell \Add1~120 (
// Equation(s):
// \Add1~120_combout  = (clk_counter[1] $ ((\Add1~127 )))
// \Add1~122  = CARRY(((!\Add1~127 ) # (!clk_counter[1])))
// \Add1~122COUT1_132  = CARRY(((!\Add1~127COUT1_131 ) # (!clk_counter[1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add1~127 ),
	.cin1(\Add1~127COUT1_131 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~120_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~122 ),
	.cout1(\Add1~122COUT1_132 ));
// synopsys translate_off
defparam \Add1~120 .cin0_used = "true";
defparam \Add1~120 .cin1_used = "true";
defparam \Add1~120 .lut_mask = "3c3f";
defparam \Add1~120 .operation_mode = "arithmetic";
defparam \Add1~120 .output_mode = "comb_only";
defparam \Add1~120 .register_cascade_mode = "off";
defparam \Add1~120 .sum_lutc_input = "cin";
defparam \Add1~120 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N8
maxii_lcell \Add1~95 (
// Equation(s):
// \Add1~95_combout  = (clk_counter[6] $ ((!(!\Add1~117  & \Add1~102 ) # (\Add1~117  & \Add1~102COUT1_135 ))))
// \Add1~97  = CARRY(((clk_counter[6] & !\Add1~102 )))
// \Add1~97COUT1_136  = CARRY(((clk_counter[6] & !\Add1~102COUT1_135 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~117 ),
	.cin0(\Add1~102 ),
	.cin1(\Add1~102COUT1_135 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~95_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~97 ),
	.cout1(\Add1~97COUT1_136 ));
// synopsys translate_off
defparam \Add1~95 .cin0_used = "true";
defparam \Add1~95 .cin1_used = "true";
defparam \Add1~95 .cin_used = "true";
defparam \Add1~95 .lut_mask = "c30c";
defparam \Add1~95 .operation_mode = "arithmetic";
defparam \Add1~95 .output_mode = "comb_only";
defparam \Add1~95 .register_cascade_mode = "off";
defparam \Add1~95 .sum_lutc_input = "cin";
defparam \Add1~95 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y3_N0
maxii_lcell \clk_counter[6] (
// Equation(s):
// clk_counter[6] = DFFEAS((((\Add1~95_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add1~95_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[6] .lut_mask = "ff00";
defparam \clk_counter[6] .operation_mode = "normal";
defparam \clk_counter[6] .output_mode = "reg_only";
defparam \clk_counter[6] .register_cascade_mode = "off";
defparam \clk_counter[6] .sum_lutc_input = "datac";
defparam \clk_counter[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N0
maxii_lcell \Add1~90 (
// Equation(s):
// \Add1~90_combout  = (clk_counter[8] $ ((!\Add1~82 )))
// \Add1~92  = CARRY(((clk_counter[8] & !\Add1~82 )))
// \Add1~92COUT1_137  = CARRY(((clk_counter[8] & !\Add1~82 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~82 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~90_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~92 ),
	.cout1(\Add1~92COUT1_137 ));
// synopsys translate_off
defparam \Add1~90 .cin_used = "true";
defparam \Add1~90 .lut_mask = "c30c";
defparam \Add1~90 .operation_mode = "arithmetic";
defparam \Add1~90 .output_mode = "comb_only";
defparam \Add1~90 .register_cascade_mode = "off";
defparam \Add1~90 .sum_lutc_input = "cin";
defparam \Add1~90 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y4_N7
maxii_lcell \clk_counter[8] (
// Equation(s):
// clk_counter[8] = DFFEAS(GND, GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , \Add1~90_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add1~90_combout ),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[8]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[8] .lut_mask = "0000";
defparam \clk_counter[8] .operation_mode = "normal";
defparam \clk_counter[8] .output_mode = "reg_only";
defparam \clk_counter[8] .register_cascade_mode = "off";
defparam \clk_counter[8] .sum_lutc_input = "datac";
defparam \clk_counter[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y3_N1
maxii_lcell \clk_counter[9] (
// Equation(s):
// \Equal0~5  = (!clk_counter[6] & (clk_counter[7] & (!clk_counter[9] & !clk_counter[8])))
// clk_counter[9] = DFFEAS(\Equal0~5 , GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , \Add1~85_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(clk_counter[6]),
	.datab(clk_counter[7]),
	.datac(\Add1~85_combout ),
	.datad(clk_counter[8]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~5 ),
	.regout(clk_counter[9]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[9] .lut_mask = "0004";
defparam \clk_counter[9] .operation_mode = "normal";
defparam \clk_counter[9] .output_mode = "reg_and_comb";
defparam \clk_counter[9] .register_cascade_mode = "off";
defparam \clk_counter[9] .sum_lutc_input = "qfbk";
defparam \clk_counter[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N1
maxii_lcell \Add1~85 (
// Equation(s):
// \Add1~85_combout  = (clk_counter[9] $ (((!\Add1~82  & \Add1~92 ) # (\Add1~82  & \Add1~92COUT1_137 ))))
// \Add1~87  = CARRY(((!\Add1~92 ) # (!clk_counter[9])))
// \Add1~87COUT1_138  = CARRY(((!\Add1~92COUT1_137 ) # (!clk_counter[9])))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~82 ),
	.cin0(\Add1~92 ),
	.cin1(\Add1~92COUT1_137 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~85_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~87 ),
	.cout1(\Add1~87COUT1_138 ));
// synopsys translate_off
defparam \Add1~85 .cin0_used = "true";
defparam \Add1~85 .cin1_used = "true";
defparam \Add1~85 .cin_used = "true";
defparam \Add1~85 .lut_mask = "3c3f";
defparam \Add1~85 .operation_mode = "arithmetic";
defparam \Add1~85 .output_mode = "comb_only";
defparam \Add1~85 .register_cascade_mode = "off";
defparam \Add1~85 .sum_lutc_input = "cin";
defparam \Add1~85 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N2
maxii_lcell \clk_counter[1] (
// Equation(s):
// \Equal0~7  = (!clk_counter[0] & (\Equal0~6  & (!clk_counter[1] & \Equal0~5 )))
// clk_counter[1] = DFFEAS(\Equal0~7 , GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , \Add1~120_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(clk_counter[0]),
	.datab(\Equal0~6 ),
	.datac(\Add1~120_combout ),
	.datad(\Equal0~5 ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~7 ),
	.regout(clk_counter[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[1] .lut_mask = "0400";
defparam \clk_counter[1] .operation_mode = "normal";
defparam \clk_counter[1] .output_mode = "reg_and_comb";
defparam \clk_counter[1] .register_cascade_mode = "off";
defparam \clk_counter[1] .sum_lutc_input = "qfbk";
defparam \clk_counter[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N4
maxii_lcell \Add1~115 (
// Equation(s):
// \Add1~115_combout  = (clk_counter[2] $ ((!\Add1~122 )))
// \Add1~117  = CARRY(((clk_counter[2] & !\Add1~122COUT1_132 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add1~122 ),
	.cin1(\Add1~122COUT1_132 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~115_combout ),
	.regout(),
	.cout(\Add1~117 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add1~115 .cin0_used = "true";
defparam \Add1~115 .cin1_used = "true";
defparam \Add1~115 .lut_mask = "c30c";
defparam \Add1~115 .operation_mode = "arithmetic";
defparam \Add1~115 .output_mode = "comb_only";
defparam \Add1~115 .register_cascade_mode = "off";
defparam \Add1~115 .sum_lutc_input = "cin";
defparam \Add1~115 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N3
maxii_lcell \clk_counter[2] (
// Equation(s):
// clk_counter[2] = DFFEAS(GND, GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , \Add1~115_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add1~115_combout ),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[2] .lut_mask = "0000";
defparam \clk_counter[2] .operation_mode = "normal";
defparam \clk_counter[2] .output_mode = "reg_only";
defparam \clk_counter[2] .register_cascade_mode = "off";
defparam \clk_counter[2] .sum_lutc_input = "datac";
defparam \clk_counter[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y3_N9
maxii_lcell \Add1~80 (
// Equation(s):
// \Add1~80_combout  = (clk_counter[7] $ (((!\Add1~117  & \Add1~97 ) # (\Add1~117  & \Add1~97COUT1_136 ))))
// \Add1~82  = CARRY(((!\Add1~97COUT1_136 ) # (!clk_counter[7])))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~117 ),
	.cin0(\Add1~97 ),
	.cin1(\Add1~97COUT1_136 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~80_combout ),
	.regout(),
	.cout(\Add1~82 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add1~80 .cin0_used = "true";
defparam \Add1~80 .cin1_used = "true";
defparam \Add1~80 .cin_used = "true";
defparam \Add1~80 .lut_mask = "3c3f";
defparam \Add1~80 .operation_mode = "arithmetic";
defparam \Add1~80 .output_mode = "comb_only";
defparam \Add1~80 .register_cascade_mode = "off";
defparam \Add1~80 .sum_lutc_input = "cin";
defparam \Add1~80 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N6
maxii_lcell \clk_counter[7] (
// Equation(s):
// clk_counter[7] = DFFEAS((((\Add1~80_combout  & !\Equal0~8_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add1~80_combout ),
	.datad(\Equal0~8_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[7] .lut_mask = "00f0";
defparam \clk_counter[7] .operation_mode = "normal";
defparam \clk_counter[7] .output_mode = "reg_only";
defparam \clk_counter[7] .register_cascade_mode = "off";
defparam \clk_counter[7] .sum_lutc_input = "datac";
defparam \clk_counter[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N5
maxii_lcell \Add1~60 (
// Equation(s):
// \Add1~60_combout  = (clk_counter[13] $ ((\Add1~67 )))
// \Add1~62  = CARRY(((!\Add1~67 ) # (!clk_counter[13])))
// \Add1~62COUT1_141  = CARRY(((!\Add1~67 ) # (!clk_counter[13])))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[13]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~67 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~60_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~62 ),
	.cout1(\Add1~62COUT1_141 ));
// synopsys translate_off
defparam \Add1~60 .cin_used = "true";
defparam \Add1~60 .lut_mask = "3c3f";
defparam \Add1~60 .operation_mode = "arithmetic";
defparam \Add1~60 .output_mode = "comb_only";
defparam \Add1~60 .register_cascade_mode = "off";
defparam \Add1~60 .sum_lutc_input = "cin";
defparam \Add1~60 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N7
maxii_lcell \clk_counter[13] (
// Equation(s):
// clk_counter[13] = DFFEAS((((\Add1~60_combout  & !\Equal0~8_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add1~60_combout ),
	.datad(\Equal0~8_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[13]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[13] .lut_mask = "00f0";
defparam \clk_counter[13] .operation_mode = "normal";
defparam \clk_counter[13] .output_mode = "reg_only";
defparam \clk_counter[13] .register_cascade_mode = "off";
defparam \clk_counter[13] .sum_lutc_input = "datac";
defparam \clk_counter[13] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N2
maxii_lcell \Add1~75 (
// Equation(s):
// \Add1~75_combout  = clk_counter[10] $ ((((!(!\Add1~82  & \Add1~87 ) # (\Add1~82  & \Add1~87COUT1_138 )))))
// \Add1~77  = CARRY((clk_counter[10] & ((!\Add1~87 ))))
// \Add1~77COUT1_139  = CARRY((clk_counter[10] & ((!\Add1~87COUT1_138 ))))

	.clk(gnd),
	.dataa(clk_counter[10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~82 ),
	.cin0(\Add1~87 ),
	.cin1(\Add1~87COUT1_138 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~75_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~77 ),
	.cout1(\Add1~77COUT1_139 ));
// synopsys translate_off
defparam \Add1~75 .cin0_used = "true";
defparam \Add1~75 .cin1_used = "true";
defparam \Add1~75 .cin_used = "true";
defparam \Add1~75 .lut_mask = "a50a";
defparam \Add1~75 .operation_mode = "arithmetic";
defparam \Add1~75 .output_mode = "comb_only";
defparam \Add1~75 .register_cascade_mode = "off";
defparam \Add1~75 .sum_lutc_input = "cin";
defparam \Add1~75 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N0
maxii_lcell \clk_counter[10] (
// Equation(s):
// clk_counter[10] = DFFEAS((((\Add1~75_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add1~75_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[10]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[10] .lut_mask = "ff00";
defparam \clk_counter[10] .operation_mode = "normal";
defparam \clk_counter[10] .output_mode = "reg_only";
defparam \clk_counter[10] .register_cascade_mode = "off";
defparam \clk_counter[10] .sum_lutc_input = "datac";
defparam \clk_counter[10] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N3
maxii_lcell \Add1~70 (
// Equation(s):
// \Add1~70_combout  = (clk_counter[11] $ (((!\Add1~82  & \Add1~77 ) # (\Add1~82  & \Add1~77COUT1_139 ))))
// \Add1~72  = CARRY(((!\Add1~77 ) # (!clk_counter[11])))
// \Add1~72COUT1_140  = CARRY(((!\Add1~77COUT1_139 ) # (!clk_counter[11])))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[11]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~82 ),
	.cin0(\Add1~77 ),
	.cin1(\Add1~77COUT1_139 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~70_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~72 ),
	.cout1(\Add1~72COUT1_140 ));
// synopsys translate_off
defparam \Add1~70 .cin0_used = "true";
defparam \Add1~70 .cin1_used = "true";
defparam \Add1~70 .cin_used = "true";
defparam \Add1~70 .lut_mask = "3c3f";
defparam \Add1~70 .operation_mode = "arithmetic";
defparam \Add1~70 .output_mode = "comb_only";
defparam \Add1~70 .register_cascade_mode = "off";
defparam \Add1~70 .sum_lutc_input = "cin";
defparam \Add1~70 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N5
maxii_lcell \clk_counter[11] (
// Equation(s):
// \Equal0~4  = (clk_counter[12] & (clk_counter[13] & (!clk_counter[11] & !clk_counter[10])))
// clk_counter[11] = DFFEAS(\Equal0~4 , GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , \Add1~70_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(clk_counter[12]),
	.datab(clk_counter[13]),
	.datac(\Add1~70_combout ),
	.datad(clk_counter[10]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~4 ),
	.regout(clk_counter[11]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[11] .lut_mask = "0008";
defparam \clk_counter[11] .operation_mode = "normal";
defparam \clk_counter[11] .output_mode = "reg_and_comb";
defparam \clk_counter[11] .register_cascade_mode = "off";
defparam \clk_counter[11] .sum_lutc_input = "qfbk";
defparam \clk_counter[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y3_N4
maxii_lcell \Add1~65 (
// Equation(s):
// \Add1~65_combout  = clk_counter[12] $ ((((!(!\Add1~82  & \Add1~72 ) # (\Add1~82  & \Add1~72COUT1_140 )))))
// \Add1~67  = CARRY((clk_counter[12] & ((!\Add1~72COUT1_140 ))))

	.clk(gnd),
	.dataa(clk_counter[12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~82 ),
	.cin0(\Add1~72 ),
	.cin1(\Add1~72COUT1_140 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~65_combout ),
	.regout(),
	.cout(\Add1~67 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add1~65 .cin0_used = "true";
defparam \Add1~65 .cin1_used = "true";
defparam \Add1~65 .cin_used = "true";
defparam \Add1~65 .lut_mask = "a50a";
defparam \Add1~65 .operation_mode = "arithmetic";
defparam \Add1~65 .output_mode = "comb_only";
defparam \Add1~65 .register_cascade_mode = "off";
defparam \Add1~65 .sum_lutc_input = "cin";
defparam \Add1~65 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N6
maxii_lcell \clk_counter[12] (
// Equation(s):
// clk_counter[12] = DFFEAS((((!\Equal0~8_combout  & \Add1~65_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Equal0~8_combout ),
	.datad(\Add1~65_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[12]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[12] .lut_mask = "0f00";
defparam \clk_counter[12] .operation_mode = "normal";
defparam \clk_counter[12] .output_mode = "reg_only";
defparam \clk_counter[12] .register_cascade_mode = "off";
defparam \clk_counter[12] .sum_lutc_input = "datac";
defparam \clk_counter[12] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N6
maxii_lcell \Add1~50 (
// Equation(s):
// \Add1~50_combout  = (clk_counter[14] $ ((!(!\Add1~67  & \Add1~62 ) # (\Add1~67  & \Add1~62COUT1_141 ))))
// \Add1~52  = CARRY(((clk_counter[14] & !\Add1~62 )))
// \Add1~52COUT1_142  = CARRY(((clk_counter[14] & !\Add1~62COUT1_141 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[14]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~67 ),
	.cin0(\Add1~62 ),
	.cin1(\Add1~62COUT1_141 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~50_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~52 ),
	.cout1(\Add1~52COUT1_142 ));
// synopsys translate_off
defparam \Add1~50 .cin0_used = "true";
defparam \Add1~50 .cin1_used = "true";
defparam \Add1~50 .cin_used = "true";
defparam \Add1~50 .lut_mask = "c30c";
defparam \Add1~50 .operation_mode = "arithmetic";
defparam \Add1~50 .output_mode = "comb_only";
defparam \Add1~50 .register_cascade_mode = "off";
defparam \Add1~50 .sum_lutc_input = "cin";
defparam \Add1~50 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N4
maxii_lcell \clk_counter[14] (
// Equation(s):
// clk_counter[14] = DFFEAS(((\Add1~50_combout  & ((!\Equal0~8_combout )))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\Add1~50_combout ),
	.datac(vcc),
	.datad(\Equal0~8_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[14]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[14] .lut_mask = "00cc";
defparam \clk_counter[14] .operation_mode = "normal";
defparam \clk_counter[14] .output_mode = "reg_only";
defparam \clk_counter[14] .register_cascade_mode = "off";
defparam \clk_counter[14] .sum_lutc_input = "datac";
defparam \clk_counter[14] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N7
maxii_lcell \Add1~45 (
// Equation(s):
// \Add1~45_combout  = clk_counter[15] $ (((((!\Add1~67  & \Add1~52 ) # (\Add1~67  & \Add1~52COUT1_142 )))))
// \Add1~47  = CARRY(((!\Add1~52 )) # (!clk_counter[15]))
// \Add1~47COUT1_143  = CARRY(((!\Add1~52COUT1_142 )) # (!clk_counter[15]))

	.clk(gnd),
	.dataa(clk_counter[15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~67 ),
	.cin0(\Add1~52 ),
	.cin1(\Add1~52COUT1_142 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~45_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~47 ),
	.cout1(\Add1~47COUT1_143 ));
// synopsys translate_off
defparam \Add1~45 .cin0_used = "true";
defparam \Add1~45 .cin1_used = "true";
defparam \Add1~45 .cin_used = "true";
defparam \Add1~45 .lut_mask = "5a5f";
defparam \Add1~45 .operation_mode = "arithmetic";
defparam \Add1~45 .output_mode = "comb_only";
defparam \Add1~45 .register_cascade_mode = "off";
defparam \Add1~45 .sum_lutc_input = "cin";
defparam \Add1~45 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N2
maxii_lcell \clk_counter[15] (
// Equation(s):
// clk_counter[15] = DFFEAS((((\Add1~45_combout  & !\Equal0~8_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add1~45_combout ),
	.datad(\Equal0~8_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[15]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[15] .lut_mask = "00f0";
defparam \clk_counter[15] .operation_mode = "normal";
defparam \clk_counter[15] .output_mode = "reg_only";
defparam \clk_counter[15] .register_cascade_mode = "off";
defparam \clk_counter[15] .sum_lutc_input = "datac";
defparam \clk_counter[15] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N8
maxii_lcell \Add1~55 (
// Equation(s):
// \Add1~55_combout  = (clk_counter[16] $ ((!(!\Add1~67  & \Add1~47 ) # (\Add1~67  & \Add1~47COUT1_143 ))))
// \Add1~57  = CARRY(((clk_counter[16] & !\Add1~47 )))
// \Add1~57COUT1_144  = CARRY(((clk_counter[16] & !\Add1~47COUT1_143 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~67 ),
	.cin0(\Add1~47 ),
	.cin1(\Add1~47COUT1_143 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~55_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~57 ),
	.cout1(\Add1~57COUT1_144 ));
// synopsys translate_off
defparam \Add1~55 .cin0_used = "true";
defparam \Add1~55 .cin1_used = "true";
defparam \Add1~55 .cin_used = "true";
defparam \Add1~55 .lut_mask = "c30c";
defparam \Add1~55 .operation_mode = "arithmetic";
defparam \Add1~55 .output_mode = "comb_only";
defparam \Add1~55 .register_cascade_mode = "off";
defparam \Add1~55 .sum_lutc_input = "cin";
defparam \Add1~55 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N9
maxii_lcell \Add1~40 (
// Equation(s):
// \Add1~40_combout  = (clk_counter[17] $ (((!\Add1~67  & \Add1~57 ) # (\Add1~67  & \Add1~57COUT1_144 ))))
// \Add1~42  = CARRY(((!\Add1~57COUT1_144 ) # (!clk_counter[17])))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[17]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~67 ),
	.cin0(\Add1~57 ),
	.cin1(\Add1~57COUT1_144 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~40_combout ),
	.regout(),
	.cout(\Add1~42 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add1~40 .cin0_used = "true";
defparam \Add1~40 .cin1_used = "true";
defparam \Add1~40 .cin_used = "true";
defparam \Add1~40 .lut_mask = "3c3f";
defparam \Add1~40 .operation_mode = "arithmetic";
defparam \Add1~40 .output_mode = "comb_only";
defparam \Add1~40 .register_cascade_mode = "off";
defparam \Add1~40 .sum_lutc_input = "cin";
defparam \Add1~40 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N3
maxii_lcell \clk_counter[17] (
// Equation(s):
// clk_counter[17] = DFFEAS((((\Add1~40_combout  & !\Equal0~8_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add1~40_combout ),
	.datad(\Equal0~8_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[17]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[17] .lut_mask = "00f0";
defparam \clk_counter[17] .operation_mode = "normal";
defparam \clk_counter[17] .output_mode = "reg_only";
defparam \clk_counter[17] .register_cascade_mode = "off";
defparam \clk_counter[17] .sum_lutc_input = "datac";
defparam \clk_counter[17] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N1
maxii_lcell \clk_counter[16] (
// Equation(s):
// \Equal0~3  = (clk_counter[14] & (clk_counter[15] & (!clk_counter[16] & clk_counter[17])))
// clk_counter[16] = DFFEAS(\Equal0~3 , GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , \Add1~55_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(clk_counter[14]),
	.datab(clk_counter[15]),
	.datac(\Add1~55_combout ),
	.datad(clk_counter[17]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~3 ),
	.regout(clk_counter[16]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[16] .lut_mask = "0800";
defparam \clk_counter[16] .operation_mode = "normal";
defparam \clk_counter[16] .output_mode = "reg_and_comb";
defparam \clk_counter[16] .register_cascade_mode = "off";
defparam \clk_counter[16] .sum_lutc_input = "qfbk";
defparam \clk_counter[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N0
maxii_lcell \Add1~35 (
// Equation(s):
// \Add1~35_combout  = clk_counter[18] $ ((((!\Add1~42 ))))
// \Add1~37  = CARRY((clk_counter[18] & ((!\Add1~42 ))))
// \Add1~37COUT1_145  = CARRY((clk_counter[18] & ((!\Add1~42 ))))

	.clk(gnd),
	.dataa(clk_counter[18]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~42 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~35_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~37 ),
	.cout1(\Add1~37COUT1_145 ));
// synopsys translate_off
defparam \Add1~35 .cin_used = "true";
defparam \Add1~35 .lut_mask = "a50a";
defparam \Add1~35 .operation_mode = "arithmetic";
defparam \Add1~35 .output_mode = "comb_only";
defparam \Add1~35 .register_cascade_mode = "off";
defparam \Add1~35 .sum_lutc_input = "cin";
defparam \Add1~35 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N3
maxii_lcell \clk_counter[18] (
// Equation(s):
// \Equal0~1  = (clk_counter[19] & (clk_counter[21] & (!clk_counter[18] & clk_counter[20])))
// clk_counter[18] = DFFEAS(\Equal0~1 , GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , \Add1~35_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(clk_counter[19]),
	.datab(clk_counter[21]),
	.datac(\Add1~35_combout ),
	.datad(clk_counter[20]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~1 ),
	.regout(clk_counter[18]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[18] .lut_mask = "0800";
defparam \clk_counter[18] .operation_mode = "normal";
defparam \clk_counter[18] .output_mode = "reg_and_comb";
defparam \clk_counter[18] .register_cascade_mode = "off";
defparam \clk_counter[18] .sum_lutc_input = "qfbk";
defparam \clk_counter[18] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y3_N1
maxii_lcell \Add1~30 (
// Equation(s):
// \Add1~30_combout  = (clk_counter[19] $ (((!\Add1~42  & \Add1~37 ) # (\Add1~42  & \Add1~37COUT1_145 ))))
// \Add1~32  = CARRY(((!\Add1~37 ) # (!clk_counter[19])))
// \Add1~32COUT1_146  = CARRY(((!\Add1~37COUT1_145 ) # (!clk_counter[19])))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[19]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~42 ),
	.cin0(\Add1~37 ),
	.cin1(\Add1~37COUT1_145 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~30_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~32 ),
	.cout1(\Add1~32COUT1_146 ));
// synopsys translate_off
defparam \Add1~30 .cin0_used = "true";
defparam \Add1~30 .cin1_used = "true";
defparam \Add1~30 .cin_used = "true";
defparam \Add1~30 .lut_mask = "3c3f";
defparam \Add1~30 .operation_mode = "arithmetic";
defparam \Add1~30 .output_mode = "comb_only";
defparam \Add1~30 .register_cascade_mode = "off";
defparam \Add1~30 .sum_lutc_input = "cin";
defparam \Add1~30 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N5
maxii_lcell \clk_counter[19] (
// Equation(s):
// clk_counter[19] = DFFEAS((((\Add1~30_combout  & !\Equal0~8_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add1~30_combout ),
	.datad(\Equal0~8_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[19]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[19] .lut_mask = "00f0";
defparam \clk_counter[19] .operation_mode = "normal";
defparam \clk_counter[19] .output_mode = "reg_only";
defparam \clk_counter[19] .register_cascade_mode = "off";
defparam \clk_counter[19] .sum_lutc_input = "datac";
defparam \clk_counter[19] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N2
maxii_lcell \Add1~25 (
// Equation(s):
// \Add1~25_combout  = (clk_counter[20] $ ((!(!\Add1~42  & \Add1~32 ) # (\Add1~42  & \Add1~32COUT1_146 ))))
// \Add1~27  = CARRY(((clk_counter[20] & !\Add1~32 )))
// \Add1~27COUT1_147  = CARRY(((clk_counter[20] & !\Add1~32COUT1_146 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[20]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~42 ),
	.cin0(\Add1~32 ),
	.cin1(\Add1~32COUT1_146 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~25_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~27 ),
	.cout1(\Add1~27COUT1_147 ));
// synopsys translate_off
defparam \Add1~25 .cin0_used = "true";
defparam \Add1~25 .cin1_used = "true";
defparam \Add1~25 .cin_used = "true";
defparam \Add1~25 .lut_mask = "c30c";
defparam \Add1~25 .operation_mode = "arithmetic";
defparam \Add1~25 .output_mode = "comb_only";
defparam \Add1~25 .register_cascade_mode = "off";
defparam \Add1~25 .sum_lutc_input = "cin";
defparam \Add1~25 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N2
maxii_lcell \clk_counter[20] (
// Equation(s):
// clk_counter[20] = DFFEAS(((\Add1~25_combout  & (!\Equal0~8_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\Add1~25_combout ),
	.datac(\Equal0~8_combout ),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[20]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[20] .lut_mask = "0c0c";
defparam \clk_counter[20] .operation_mode = "normal";
defparam \clk_counter[20] .output_mode = "reg_only";
defparam \clk_counter[20] .register_cascade_mode = "off";
defparam \clk_counter[20] .sum_lutc_input = "datac";
defparam \clk_counter[20] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N3
maxii_lcell \Add1~20 (
// Equation(s):
// \Add1~20_combout  = (clk_counter[21] $ (((!\Add1~42  & \Add1~27 ) # (\Add1~42  & \Add1~27COUT1_147 ))))
// \Add1~22  = CARRY(((!\Add1~27 ) # (!clk_counter[21])))
// \Add1~22COUT1_148  = CARRY(((!\Add1~27COUT1_147 ) # (!clk_counter[21])))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[21]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~42 ),
	.cin0(\Add1~27 ),
	.cin1(\Add1~27COUT1_147 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~20_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~22 ),
	.cout1(\Add1~22COUT1_148 ));
// synopsys translate_off
defparam \Add1~20 .cin0_used = "true";
defparam \Add1~20 .cin1_used = "true";
defparam \Add1~20 .cin_used = "true";
defparam \Add1~20 .lut_mask = "3c3f";
defparam \Add1~20 .operation_mode = "arithmetic";
defparam \Add1~20 .output_mode = "comb_only";
defparam \Add1~20 .register_cascade_mode = "off";
defparam \Add1~20 .sum_lutc_input = "cin";
defparam \Add1~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N7
maxii_lcell \clk_counter[21] (
// Equation(s):
// clk_counter[21] = DFFEAS((((!\Equal0~8_combout  & \Add1~20_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Equal0~8_combout ),
	.datad(\Add1~20_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[21]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[21] .lut_mask = "0f00";
defparam \clk_counter[21] .operation_mode = "normal";
defparam \clk_counter[21] .output_mode = "reg_only";
defparam \clk_counter[21] .register_cascade_mode = "off";
defparam \clk_counter[21] .sum_lutc_input = "datac";
defparam \clk_counter[21] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N4
maxii_lcell \Add1~15 (
// Equation(s):
// \Add1~15_combout  = clk_counter[22] $ ((((!(!\Add1~42  & \Add1~22 ) # (\Add1~42  & \Add1~22COUT1_148 )))))
// \Add1~17  = CARRY((clk_counter[22] & ((!\Add1~22COUT1_148 ))))

	.clk(gnd),
	.dataa(clk_counter[22]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~42 ),
	.cin0(\Add1~22 ),
	.cin1(\Add1~22COUT1_148 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~15_combout ),
	.regout(),
	.cout(\Add1~17 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add1~15 .cin0_used = "true";
defparam \Add1~15 .cin1_used = "true";
defparam \Add1~15 .cin_used = "true";
defparam \Add1~15 .lut_mask = "a50a";
defparam \Add1~15 .operation_mode = "arithmetic";
defparam \Add1~15 .output_mode = "comb_only";
defparam \Add1~15 .register_cascade_mode = "off";
defparam \Add1~15 .sum_lutc_input = "cin";
defparam \Add1~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N8
maxii_lcell \clk_counter[22] (
// Equation(s):
// clk_counter[22] = DFFEAS((((\Add1~15_combout  & !\Equal0~8_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add1~15_combout ),
	.datad(\Equal0~8_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[22]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[22] .lut_mask = "00f0";
defparam \clk_counter[22] .operation_mode = "normal";
defparam \clk_counter[22] .output_mode = "reg_only";
defparam \clk_counter[22] .register_cascade_mode = "off";
defparam \clk_counter[22] .sum_lutc_input = "datac";
defparam \clk_counter[22] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N5
maxii_lcell \Add1~10 (
// Equation(s):
// \Add1~10_combout  = (clk_counter[23] $ ((\Add1~17 )))
// \Add1~12  = CARRY(((!\Add1~17 ) # (!clk_counter[23])))
// \Add1~12COUT1_149  = CARRY(((!\Add1~17 ) # (!clk_counter[23])))

	.clk(gnd),
	.dataa(vcc),
	.datab(clk_counter[23]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~17 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~10_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~12 ),
	.cout1(\Add1~12COUT1_149 ));
// synopsys translate_off
defparam \Add1~10 .cin_used = "true";
defparam \Add1~10 .lut_mask = "3c3f";
defparam \Add1~10 .operation_mode = "arithmetic";
defparam \Add1~10 .output_mode = "comb_only";
defparam \Add1~10 .register_cascade_mode = "off";
defparam \Add1~10 .sum_lutc_input = "cin";
defparam \Add1~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N9
maxii_lcell \clk_counter[23] (
// Equation(s):
// clk_counter[23] = DFFEAS((((\Add1~10_combout  & !\Equal0~8_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add1~10_combout ),
	.datad(\Equal0~8_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[23]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[23] .lut_mask = "00f0";
defparam \clk_counter[23] .operation_mode = "normal";
defparam \clk_counter[23] .output_mode = "reg_only";
defparam \clk_counter[23] .register_cascade_mode = "off";
defparam \clk_counter[23] .sum_lutc_input = "datac";
defparam \clk_counter[23] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N6
maxii_lcell \Add1~5 (
// Equation(s):
// \Add1~5_combout  = clk_counter[24] $ ((((!(!\Add1~17  & \Add1~12 ) # (\Add1~17  & \Add1~12COUT1_149 )))))
// \Add1~7  = CARRY((clk_counter[24] & ((!\Add1~12 ))))
// \Add1~7COUT1_150  = CARRY((clk_counter[24] & ((!\Add1~12COUT1_149 ))))

	.clk(gnd),
	.dataa(clk_counter[24]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~17 ),
	.cin0(\Add1~12 ),
	.cin1(\Add1~12COUT1_149 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~5_combout ),
	.regout(),
	.cout(),
	.cout0(\Add1~7 ),
	.cout1(\Add1~7COUT1_150 ));
// synopsys translate_off
defparam \Add1~5 .cin0_used = "true";
defparam \Add1~5 .cin1_used = "true";
defparam \Add1~5 .cin_used = "true";
defparam \Add1~5 .lut_mask = "a50a";
defparam \Add1~5 .operation_mode = "arithmetic";
defparam \Add1~5 .output_mode = "comb_only";
defparam \Add1~5 .register_cascade_mode = "off";
defparam \Add1~5 .sum_lutc_input = "cin";
defparam \Add1~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N7
maxii_lcell \Add1~0 (
// Equation(s):
// \Add1~0_combout  = (((!\Add1~17  & \Add1~7 ) # (\Add1~17  & \Add1~7COUT1_150 ) $ (clk_counter[25])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(clk_counter[25]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add1~17 ),
	.cin0(\Add1~7 ),
	.cin1(\Add1~7COUT1_150 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add1~0 .cin0_used = "true";
defparam \Add1~0 .cin1_used = "true";
defparam \Add1~0 .cin_used = "true";
defparam \Add1~0 .lut_mask = "0ff0";
defparam \Add1~0 .operation_mode = "normal";
defparam \Add1~0 .output_mode = "comb_only";
defparam \Add1~0 .register_cascade_mode = "off";
defparam \Add1~0 .sum_lutc_input = "cin";
defparam \Add1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N8
maxii_lcell \clk_counter[25] (
// Equation(s):
// clk_counter[25] = DFFEAS((((!\Equal0~8_combout  & \Add1~0_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Equal0~8_combout ),
	.datad(\Add1~0_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(clk_counter[25]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[25] .lut_mask = "0f00";
defparam \clk_counter[25] .operation_mode = "normal";
defparam \clk_counter[25] .output_mode = "reg_only";
defparam \clk_counter[25] .register_cascade_mode = "off";
defparam \clk_counter[25] .sum_lutc_input = "datac";
defparam \clk_counter[25] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y3_N6
maxii_lcell \clk_counter[24] (
// Equation(s):
// \Equal0~0  = (((!clk_counter[24] & clk_counter[25])))
// clk_counter[24] = DFFEAS(\Equal0~0 , GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , , \Add1~5_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add1~5_combout ),
	.datad(clk_counter[25]),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~0 ),
	.regout(clk_counter[24]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \clk_counter[24] .lut_mask = "0f00";
defparam \clk_counter[24] .operation_mode = "normal";
defparam \clk_counter[24] .output_mode = "reg_and_comb";
defparam \clk_counter[24] .register_cascade_mode = "off";
defparam \clk_counter[24] .sum_lutc_input = "qfbk";
defparam \clk_counter[24] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y3_N4
maxii_lcell \Equal0~2 (
// Equation(s):
// \Equal0~2_combout  = (clk_counter[23] & (clk_counter[22] & (\Equal0~0  & \Equal0~1 )))

	.clk(gnd),
	.dataa(clk_counter[23]),
	.datab(clk_counter[22]),
	.datac(\Equal0~0 ),
	.datad(\Equal0~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal0~2 .lut_mask = "8000";
defparam \Equal0~2 .operation_mode = "normal";
defparam \Equal0~2 .output_mode = "comb_only";
defparam \Equal0~2 .register_cascade_mode = "off";
defparam \Equal0~2 .sum_lutc_input = "datac";
defparam \Equal0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N5
maxii_lcell \Equal0~8 (
// Equation(s):
// \Equal0~8_combout  = (\Equal0~3  & (\Equal0~4  & (\Equal0~2_combout  & \Equal0~7 )))

	.clk(gnd),
	.dataa(\Equal0~3 ),
	.datab(\Equal0~4 ),
	.datac(\Equal0~2_combout ),
	.datad(\Equal0~7 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal0~8 .lut_mask = "8000";
defparam \Equal0~8 .operation_mode = "normal";
defparam \Equal0~8 .output_mode = "comb_only";
defparam \Equal0~8 .register_cascade_mode = "off";
defparam \Equal0~8 .sum_lutc_input = "datac";
defparam \Equal0~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N9
maxii_lcell \seconds_counter[0]~reg0 (
// Equation(s):
// \seconds_counter[0]~reg0_regout  = DFFEAS((((!\seconds_counter[0]~reg0_regout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \Equal0~8_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\seconds_counter[0]~reg0_regout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal0~8_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seconds_counter[0]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seconds_counter[0]~reg0 .lut_mask = "00ff";
defparam \seconds_counter[0]~reg0 .operation_mode = "normal";
defparam \seconds_counter[0]~reg0 .output_mode = "reg_only";
defparam \seconds_counter[0]~reg0 .register_cascade_mode = "off";
defparam \seconds_counter[0]~reg0 .sum_lutc_input = "datac";
defparam \seconds_counter[0]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N1
maxii_lcell \Add0~27 (
// Equation(s):
// \Add0~27_cout0  = CARRY(((!\seconds_counter[0]~reg0_regout )))
// \Add0~27COUT1_31  = CARRY(((!\seconds_counter[0]~reg0_regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\seconds_counter[0]~reg0_regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~25 ),
	.regout(),
	.cout(),
	.cout0(\Add0~27_cout0 ),
	.cout1(\Add0~27COUT1_31 ));
// synopsys translate_off
defparam \Add0~27 .lut_mask = "ff33";
defparam \Add0~27 .operation_mode = "arithmetic";
defparam \Add0~27 .output_mode = "none";
defparam \Add0~27 .register_cascade_mode = "off";
defparam \Add0~27 .sum_lutc_input = "datac";
defparam \Add0~27 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N2
maxii_lcell \Add0~0 (
// Equation(s):
// \Add0~0_combout  = (\seconds_counter[1]~reg0_regout  $ ((\Add0~27_cout0 )))
// \Add0~2  = CARRY(((\seconds_counter[1]~reg0_regout  & !\Add0~27_cout0 )))
// \Add0~2COUT1_32  = CARRY(((\seconds_counter[1]~reg0_regout  & !\Add0~27COUT1_31 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\seconds_counter[1]~reg0_regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add0~27_cout0 ),
	.cin1(\Add0~27COUT1_31 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~0_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~2 ),
	.cout1(\Add0~2COUT1_32 ));
// synopsys translate_off
defparam \Add0~0 .cin0_used = "true";
defparam \Add0~0 .cin1_used = "true";
defparam \Add0~0 .lut_mask = "3c0c";
defparam \Add0~0 .operation_mode = "arithmetic";
defparam \Add0~0 .output_mode = "comb_only";
defparam \Add0~0 .register_cascade_mode = "off";
defparam \Add0~0 .sum_lutc_input = "cin";
defparam \Add0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N4
maxii_lcell \seconds_counter[1]~reg0 (
// Equation(s):
// \seconds_counter[1]~reg0_regout  = DFFEAS((((!\Add0~0_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \Equal0~8_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0~0_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal0~8_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seconds_counter[1]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seconds_counter[1]~reg0 .lut_mask = "00ff";
defparam \seconds_counter[1]~reg0 .operation_mode = "normal";
defparam \seconds_counter[1]~reg0 .output_mode = "reg_only";
defparam \seconds_counter[1]~reg0 .register_cascade_mode = "off";
defparam \seconds_counter[1]~reg0 .sum_lutc_input = "datac";
defparam \seconds_counter[1]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N3
maxii_lcell \Add0~5 (
// Equation(s):
// \Add0~5_combout  = (\seconds_counter[2]~reg0_regout  $ ((\Add0~2 )))
// \Add0~7  = CARRY(((\seconds_counter[2]~reg0_regout ) # (!\Add0~2 )))
// \Add0~7COUT1_33  = CARRY(((\seconds_counter[2]~reg0_regout ) # (!\Add0~2COUT1_32 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\seconds_counter[2]~reg0_regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add0~2 ),
	.cin1(\Add0~2COUT1_32 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~5_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~7 ),
	.cout1(\Add0~7COUT1_33 ));
// synopsys translate_off
defparam \Add0~5 .cin0_used = "true";
defparam \Add0~5 .cin1_used = "true";
defparam \Add0~5 .lut_mask = "3ccf";
defparam \Add0~5 .operation_mode = "arithmetic";
defparam \Add0~5 .output_mode = "comb_only";
defparam \Add0~5 .register_cascade_mode = "off";
defparam \Add0~5 .sum_lutc_input = "cin";
defparam \Add0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N4
maxii_lcell \Add0~10 (
// Equation(s):
// \Add0~10_combout  = (\seconds_counter[3]~reg0_regout  $ ((\Add0~7 )))
// \Add0~12  = CARRY(((\seconds_counter[3]~reg0_regout  & !\Add0~7COUT1_33 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\seconds_counter[3]~reg0_regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add0~7 ),
	.cin1(\Add0~7COUT1_33 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~10_combout ),
	.regout(),
	.cout(\Add0~12 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add0~10 .cin0_used = "true";
defparam \Add0~10 .cin1_used = "true";
defparam \Add0~10 .lut_mask = "3c0c";
defparam \Add0~10 .operation_mode = "arithmetic";
defparam \Add0~10 .output_mode = "comb_only";
defparam \Add0~10 .register_cascade_mode = "off";
defparam \Add0~10 .sum_lutc_input = "cin";
defparam \Add0~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y3_N8
maxii_lcell \seconds_counter[3]~reg0 (
// Equation(s):
// \seconds_counter[3]~reg0_regout  = DFFEAS((((!\Add0~10_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \Equal0~8_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add0~10_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal0~8_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seconds_counter[3]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seconds_counter[3]~reg0 .lut_mask = "00ff";
defparam \seconds_counter[3]~reg0 .operation_mode = "normal";
defparam \seconds_counter[3]~reg0 .output_mode = "reg_only";
defparam \seconds_counter[3]~reg0 .register_cascade_mode = "off";
defparam \seconds_counter[3]~reg0 .sum_lutc_input = "datac";
defparam \seconds_counter[3]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N5
maxii_lcell \Add0~15 (
// Equation(s):
// \Add0~15_combout  = (\seconds_counter[4]~reg0_regout  $ ((!\Add0~12 )))
// \Add0~17  = CARRY(((!\Add0~12 ) # (!\seconds_counter[4]~reg0_regout )))
// \Add0~17COUT1_34  = CARRY(((!\Add0~12 ) # (!\seconds_counter[4]~reg0_regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\seconds_counter[4]~reg0_regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~12 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~15_combout ),
	.regout(),
	.cout(),
	.cout0(\Add0~17 ),
	.cout1(\Add0~17COUT1_34 ));
// synopsys translate_off
defparam \Add0~15 .cin_used = "true";
defparam \Add0~15 .lut_mask = "c33f";
defparam \Add0~15 .operation_mode = "arithmetic";
defparam \Add0~15 .output_mode = "comb_only";
defparam \Add0~15 .register_cascade_mode = "off";
defparam \Add0~15 .sum_lutc_input = "cin";
defparam \Add0~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N7
maxii_lcell \seconds_counter[4]~reg0 (
// Equation(s):
// \seconds_counter[4]~reg0_regout  = DFFEAS((((!\Add0~15_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \Equal0~8_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~15_combout ),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal0~8_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seconds_counter[4]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seconds_counter[4]~reg0 .lut_mask = "0f0f";
defparam \seconds_counter[4]~reg0 .operation_mode = "normal";
defparam \seconds_counter[4]~reg0 .output_mode = "reg_only";
defparam \seconds_counter[4]~reg0 .register_cascade_mode = "off";
defparam \seconds_counter[4]~reg0 .sum_lutc_input = "datac";
defparam \seconds_counter[4]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N6
maxii_lcell \Add0~20 (
// Equation(s):
// \Add0~20_combout  = (\seconds_counter[5]~reg0_regout  $ (((!\Add0~12  & \Add0~17 ) # (\Add0~12  & \Add0~17COUT1_34 ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\seconds_counter[5]~reg0_regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\Add0~12 ),
	.cin0(\Add0~17 ),
	.cin1(\Add0~17COUT1_34 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add0~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add0~20 .cin0_used = "true";
defparam \Add0~20 .cin1_used = "true";
defparam \Add0~20 .cin_used = "true";
defparam \Add0~20 .lut_mask = "3c3c";
defparam \Add0~20 .operation_mode = "normal";
defparam \Add0~20 .output_mode = "comb_only";
defparam \Add0~20 .register_cascade_mode = "off";
defparam \Add0~20 .sum_lutc_input = "cin";
defparam \Add0~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N0
maxii_lcell \seconds_counter[5]~reg0 (
// Equation(s):
// \seconds_counter[5]~reg0_regout  = DFFEAS((((!\Add0~20_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \Equal0~8_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Add0~20_combout ),
	.datad(vcc),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal0~8_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seconds_counter[5]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seconds_counter[5]~reg0 .lut_mask = "0f0f";
defparam \seconds_counter[5]~reg0 .operation_mode = "normal";
defparam \seconds_counter[5]~reg0 .output_mode = "reg_only";
defparam \seconds_counter[5]~reg0 .register_cascade_mode = "off";
defparam \seconds_counter[5]~reg0 .sum_lutc_input = "datac";
defparam \seconds_counter[5]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N8
maxii_lcell \seconds_counter~0 (
// Equation(s):
// \seconds_counter~0_combout  = (((!\seconds_counter[3]~reg0_regout ) # (!\seconds_counter[5]~reg0_regout )) # (!\seconds_counter[4]~reg0_regout )) # (!\seconds_counter[0]~reg0_regout )

	.clk(gnd),
	.dataa(\seconds_counter[0]~reg0_regout ),
	.datab(\seconds_counter[4]~reg0_regout ),
	.datac(\seconds_counter[5]~reg0_regout ),
	.datad(\seconds_counter[3]~reg0_regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seconds_counter~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seconds_counter~0 .lut_mask = "7fff";
defparam \seconds_counter~0 .operation_mode = "normal";
defparam \seconds_counter~0 .output_mode = "comb_only";
defparam \seconds_counter~0 .register_cascade_mode = "off";
defparam \seconds_counter~0 .sum_lutc_input = "datac";
defparam \seconds_counter~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N9
maxii_lcell \seconds_counter[2]~reg0 (
// Equation(s):
// \seconds_counter[2]~reg0_regout  = DFFEAS((\Add0~5_combout  & ((\seconds_counter~0_combout ) # ((\seconds_counter[2]~reg0_regout ) # (!\seconds_counter[1]~reg0_regout )))), GLOBAL(\clk~combout ), !GLOBAL(\reset~combout ), , \Equal0~8_combout , , , , )

	.clk(\clk~combout ),
	.dataa(\seconds_counter~0_combout ),
	.datab(\seconds_counter[2]~reg0_regout ),
	.datac(\seconds_counter[1]~reg0_regout ),
	.datad(\Add0~5_combout ),
	.aclr(\reset~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\Equal0~8_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seconds_counter[2]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seconds_counter[2]~reg0 .lut_mask = "ef00";
defparam \seconds_counter[2]~reg0 .operation_mode = "normal";
defparam \seconds_counter[2]~reg0 .output_mode = "reg_only";
defparam \seconds_counter[2]~reg0 .register_cascade_mode = "off";
defparam \seconds_counter[2]~reg0 .sum_lutc_input = "datac";
defparam \seconds_counter[2]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_7,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seconds_counter[0]~I (
	.datain(!\seconds_counter[0]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seconds_counter[0]));
// synopsys translate_off
defparam \seconds_counter[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_6,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seconds_counter[1]~I (
	.datain(!\seconds_counter[1]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seconds_counter[1]));
// synopsys translate_off
defparam \seconds_counter[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seconds_counter[2]~I (
	.datain(\seconds_counter[2]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seconds_counter[2]));
// synopsys translate_off
defparam \seconds_counter[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_96,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seconds_counter[3]~I (
	.datain(!\seconds_counter[3]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seconds_counter[3]));
// synopsys translate_off
defparam \seconds_counter[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seconds_counter[4]~I (
	.datain(!\seconds_counter[4]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seconds_counter[4]));
// synopsys translate_off
defparam \seconds_counter[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seconds_counter[5]~I (
	.datain(!\seconds_counter[5]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seconds_counter[5]));
// synopsys translate_off
defparam \seconds_counter[5]~I .operation_mode = "output";
// synopsys translate_on

endmodule
